syntax = "proto3";

package plc.interface;
option csharp_namespace = "PlcSimAdvanced.Protos";

import "Protos/types.proto";

/* Defines the tag that can be read from the plc via PLCSim Advanced */
message PlcTag {
  /* The name for this tag */
  string name = 1;
  /* The memory area where this tag is located in */
  MemoryArea area = 2;
  /* The datatype that is used for this tag inside the plc */
  PlcDataType datatype = 3;
  /* The primitive datatype that is used in memory for this tag */
  PrimitiveDataType primitive_data_type = 4;
  /* The size of the tag in byte */
  uint32 size = 5;
  /* The byte offset when the tag is NOT stored in a datablock */
  uint32 offset = 6;
  /* The bit offset when the tag is NOT stored in a datablock */
  uint32 bit = 7;
  /* The index of this variable */
  uint32 index = 8;
}

/* Request data that is used for a get tag request */
message GetTagRequest {
  
}

/* Response data that is received from a get tag request*/
message GetTagResponse {
  repeated PlcTag plc_tags = 1;
}

/* Request for a GetVersion rpc call */
message GetVersionRequest {
  
}

/* Response data for a GetVersion rpc call */
message GetVersionResponse {
  uint32 major_version = 1;
  uint32 minor_version = 2;
  bool valid = 3;
}

/* Request data for a ShutdownRequest rpc call */
message ShutdownRequest {
  
}

/* Response data for a ShutdownRequest rpc call */
message ShutdownResponse {
  
}

/* Request data for a GetInstancesRequest rpc call */
message GetInstancesRequest {
  
}

/* Response data for a GetInstancesRequest rpc call */
message GetInstancesResponse {
  repeated InstanceInfo instances = 1;
}

/*  */
message RegisterInstanceRequest {
  string name = 1;
}

/*  */
message RegisterInstanceResponse {
  InstanceInfo instance = 1;
}

/* Service that is used to interact with a PLCSim plc */
service PlcSimAdvancedService
{
  rpc GetVersion(GetVersionRequest) returns (GetVersionResponse);
  rpc Shutdown(ShutdownRequest) returns (ShutdownResponse);
  rpc GetRegisteredInstances(GetInstancesRequest) returns (GetInstancesResponse);
  rpc RegisterInstance(RegisterInstanceRequest) returns (RegisterInstanceResponse);
}
